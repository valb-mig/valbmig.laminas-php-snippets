{
	"die-dump": {
		"prefix": "dd",
		"body": "echo '<pre>';\nvar_dump($${1:variable});\ndie();",
		"description": "A Simple var_dump and die"
	},
	"decode": {
		"prefix":"decode",
		"body":"mb_convert_encoding($${1:variable}, 'UTF-8', 'ISO-8859-1')",
		"description": "Decode your strings with UTF-8"
	},
	"php": {
		"prefix":"php",
		"body":"<?php\n\n\n\n?>",
		"description": "Open's php tag"
	},
	"ephp": {
		"prefix":"ephp",
		"body":"<?= $${1:variable}  ?>",
		"description": "Open echo php tag"
	},
	"cphp": {
		"prefix":"cphp",
		"body":"?>\n\n\n\n<?php",
		"description": "Open closed php tag"
	},
	"exists": {
		"prefix": "issem",
		"body": "isset($${1:variable}) && !empty($${2:variable}) ? true : false;",
		"description": "Verifies if a variable exists and have something inside"
	},
	"if-exists": {
		"prefix": "ifsem",
		"body": "if(isset($${1:variable}) && !empty($${2:variable}))\n{\n	return true;\n}",
		"description": "Verifies if a variable exists and have something inside"
	},
	"sql-complete": {
		"prefix": "sqlc",
		"body": "$$sql = new Sql($$this->${1:variable});\n$$select = $$sql->select();\n$$where  = new Where();\n\n//$$where;\n\n$$select->from(['t'=>'table'])\n->where($$where);\n\n$$rows = [];\n\n$$rs = $$sql->prepareStatementForSqlObject($$select)->execute();\n\nforeach($$rs as $$ln)\n{\n	$$bar[] = $$ln;\n}\n\nreturn $$rows;\n",
		"description": "Complete sql construction with laminas"
	},
	"sql-mid": {
		"prefix": "sqlm",
		"body": "$$sql = new Sql($this->${1:variable});\n$$select = $$sql->select();\n$$where  = new Where();\n\n//$$where;\n\n$$select->from(['t'=>'table'])\n->where($$where);\n\nreturn $$sql->prepareStatementForSqlObject($$select)->execute()->current();",
		"description": "Simple sql construction with laminas"
	},
	"sql-build": {
		"prefix": "sqlbs",
		"body": "echo $$this->${1:variable}->buildSqlString($$select);\ndie();",
		"description": "Build sql structure with laminas"
	},
	"sql-update":{
		"prefix": "sqlu",
		"body": "$$sql = new Sql($$this->${1:variable});\n$$where = new Where();\n\n$$where->equalTo('value','value');\n\n$$update = $$sql->update('table')\n->set([\n	'column' => 'value'\n])\n->where($$where);\n\n$$sql->prepareStatementForSqlObject($$update)->execute();",
		"description": "Simple update with laminas"
	}
}